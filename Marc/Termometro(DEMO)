#include "DHT.h"
#include <FastLED.h>


#define NUM_LEDS 179
#define DHTPIN 7
#define DATA_PIN 13

CRGB leds[NUM_LEDS];


#define DHTTYPE DHT11   // DHT 11

DHT dht(DHTPIN, DHTTYPE);


#include "IluminacionTermometro.h"

void setup() {
  Serial.begin(9600);

  FastLED.addLeds<NEOPIXEL, DATA_PIN>(leds, NUM_LEDS);
  FastLED.setBrightness(60);
  leds[0] = CRGB::Red;
      FastLED.show();
  delay(1000);
       leds[0] = CRGB::Black;
      FastLED.show();
      
  Serial.println(F("DHTxx test!"));

  dht.begin();

}

      
void loop() {
  delay(2000);

  float h = dht.readHumidity();
  // Read temperature as Celsius (the default)
  float t = dht.readTemperature();
  // Read temperature as Fahrenheit (isFahrenheit = true)
  float f = dht.readTemperature(true);

  // Check if any reads failed and exit early (to try again).
  if (isnan(h) || isnan(t) || isnan(f)) {
    Serial.println(F("Failed to read from DHT sensor!"));
    return;
  }

  // Compute heat index in Fahrenheit (the default)
  float hif = dht.computeHeatIndex(f, h);
  // Compute heat index in Celsius (isFahreheit = false)
  float hic = dht.computeHeatIndex(t, h, false);

  Serial.print(F("Humidity: "));
  Serial.print(h);
  Serial.print(F("%  Temperature: "));
  Serial.print(t);
  iluminarTermometro(t);
  Serial.print(F("째C "));
  Serial.print(f);
  Serial.print(F("째F  Heat index: "));
  Serial.print(hic);
  Serial.print(F("째C "));
  Serial.print(hif);
  Serial.println(F("째F"));
  //int numeroDeLedsAIluminar;
  //FastLED.show();
}


//void encenderluces(int temperatura) {
        //for (int i=0; i< temperatura -1; i++)
      //FastLED.show();
//}


void encenderLuces(int luzFinal){
      for (int i=0; i< luzFinal -1; i++)
      leds [NUM_LEDS] = CRGB::Red;
      FastLED.show(); 
}
__________________________________________________________________________________
NUEVO ARCHIVO (IluminacionTermometro.h)

#include "DHT.h"
#include <FastLED.h>

#define NUM_LEDS 179
#define DHTPIN 7
#define DATA_PIN 13

void iluminarTermometro( float temperatura) {

  float numeroDeLedsAIluminar = map (temperatura, 20.0, 30.0, 0, NUM_LEDS*100)/100.0;
  Serial.println();
  Serial.println(numeroDeLedsAIluminar);
  
  for (int i = 0; i < NUM_LEDS; i++) {
    leds[i] = CRGB::Black;
  }
  for (int i = 0; i < round(numeroDeLedsAIluminar); i++) {
    //leds [i] = CRGB::Red;
    leds [i].setHue(map(temperatura, 20.0, 30.0, 0,255));
  }
  FastLED.show();

}
